{"version":3,"sources":["images/me.png","images/linkedin-tile.svg","images/github.svg","images/down.svg","images/up.svg","components/ResumeHeader.js","components/Education.js","components/Accordion/AccordionContext.js","components/Accordion/hooks/useAccordionContext.js","components/Accordion/Toggle/index.js","components/Accordion/Collapse/index.js","components/Accordion/index.js","components/Card/CardHeader.js","components/Card/CardBody.js","components/Card/index.js","data/resumeContent.js","components/Experience.js","components/Projects.js","components/Skills.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ResumeHeader","alt","className","src","photo","href","linkedIn","github","Education","React","createContext","useAccordionContext","context","useContext","AccordionContext","Error","Toggle","Component","element","eventKey","onClick","children","otherProps","accordionClick","onToggle","activeEventKey","event","useAccordionClick","defaultProps","Collapse","Accordion","useMemo","Provider","value","cx","classNames","bind","styles","CardHeader","props","CardBody","Card","Header","Body","resumeContent","title","date","bullet","bullet2","bullet3","bullet4","bullet5","bullet6","Experience","useState","setActiveEventKey","content","map","index","key","down","up","undefined","Projects","Skills","App","style","body","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.895ffa0b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.6cefb20f.png\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-tile.33a229d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.4b0b1f14.svg\";","module.exports = __webpack_public_path__ + \"static/media/down.546a233f.svg\";","module.exports = __webpack_public_path__ + \"static/media/up.d63addad.svg\";","import React, { Fragment } from 'react';\r\nimport photo from '../images/me.png';\r\nimport '../styles/header.scss';\r\nimport linkedIn from '../images/linkedin-tile.svg';\r\nimport github from '../images/github.svg';\r\nconst ResumeHeader = () => {\r\n    return (\r\n      <Fragment>\r\n        \r\n            <img alt=\"Marwan Johnstone\" className=\"avatar\" src={photo} />\r\n            <h2 className=\"title\">Marwan Johnstone</h2>\r\n            <div className=\"iconPadding\">\r\n                <a href=\"https://www.linkedin.com/in/mjohnstone14/\"><img src={linkedIn} alt=\"linkedin\" className=\"icon\"/></a>\r\n                <a href=\"https://github.com/mjohnstone14\"><img src={github} alt=\"github\" className=\"icon\"/></a>\r\n            </div>     \r\n      </Fragment>\r\n      \r\n    )\r\n}\r\n\r\nexport default ResumeHeader;\r\n","import React from 'react';\r\nimport '../styles/education.scss'\r\n\r\nconst Education = () => {\r\n    return (\r\n        <div className=\"educationBody\">\r\n            <h2 className=\"edTitle\">Education</h2>\r\n            <div>\r\n                <a href=\"https://www.pugetsound.edu/\">\r\n                    <h3 className=\"edDescriptionLabel\">University of Puget Sound</h3>\r\n                </a>      \r\n                <li className=\"edDescription\">August 2015 - May 2019</li>\r\n                <li className=\"edDescription\">Bachelor of Science - Computer Science</li>\r\n            </div>\r\n            <div>\r\n                <a href=\"https://disabroad.org/copenhagen/\">\r\n                    <h3 className=\"edDescriptionLabel\">DIS Denmark, Copenhagen</h3>\r\n                </a> \r\n                <li className=\"edDescription\">August 2017 - May 2018</li>\r\n                <li className=\"edDescription\">Study Abroad Program</li>\r\n            </div>     \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Education;","import React from 'react';\r\n\r\nexport default React.createContext(null);","import { useContext } from 'react';\r\nimport AccordionContext from '../AccordionContext'\r\n\r\nconst useAccordionContext = () => {\r\n    const context = useContext(AccordionContext);\r\n    if(!context) {\r\n        throw new Error(\r\n            'Accordion components are a compound component. Must be used inside Accordion'\r\n        )\r\n    }\r\n    return context;\r\n};\r\n\r\nexport default useAccordionContext;","import React from \"react\";\r\nimport { useAccordionContext } from '../hooks';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useAccordionClick = (eventKey, onClick) => {\r\n    const { onToggle, activeEventKey } = useAccordionContext();\r\n    return event => {\r\n        onToggle(eventKey === activeEventKey ? null : eventKey);\r\n        if(onClick) {\r\n            onClick(event);\r\n        }\r\n    }\r\n}\r\n\r\nconst Toggle = ({\r\n    element: Component,\r\n    eventKey,\r\n    onClick,\r\n    children,\r\n    ...otherProps\r\n}) => {\r\n    const accordionClick = useAccordionClick(eventKey, onClick);\r\n    return (\r\n    <Component onClick={accordionClick} {...otherProps}>\r\n        {children}\r\n    </Component>\r\n    );\r\n};\r\n\r\nToggle.propTypes = {\r\n    //element to be rendered as a toggle\r\n    element: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n    //'eventkey' of the content to be controlled\r\n    eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n};\r\n\r\nToggle.defaultProps = {\r\n    element: 'div'\r\n};\r\n\r\nexport default Toggle;","import React from \"react\";\r\nimport useAccordionContext from \"../hooks/useAccordionContext\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Collapse = ({\r\n    element: Component,\r\n    eventKey,\r\n    children,\r\n    ...otherProps\r\n}) => {\r\n    const { activeEventKey } = useAccordionContext();\r\n\r\n    return activeEventKey === eventKey ? (\r\n    <Component {...otherProps}>{children}</Component>\r\n    ) : null;\r\n};\r\n\r\nCollapse.propTypes = {\r\n    //Wrapper for target\r\n    element: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n    //event key for the content\r\n    eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n};\r\n\r\nCollapse.defaultProps = {\r\n    element: 'div'\r\n}\r\n\r\nexport default Collapse;","import React, { useMemo } from 'react';\r\nimport Toggle from './Toggle/index.js'\r\nimport Collapse from './Collapse/index.js'\r\nimport AccordionContext from './AccordionContext.js'\r\nimport PropTypes from 'prop-types'\r\n//useLayoutEffect for slide transition\r\n\r\nconst Accordion = ({\r\n    element: Component,\r\n    activeEventKey,\r\n    onToggle,\r\n    children,\r\n    ...otherProps\r\n}) => {\r\n    //define the state\r\n    const context = useMemo(() => {\r\n        return { activeEventKey, onToggle };\r\n    }, [activeEventKey, onToggle]);\r\n\r\n    return (\r\n        <AccordionContext.Provider value={context}>\r\n            <Component {...otherProps}>{children}</Component>\r\n        </AccordionContext.Provider>\r\n    );  \r\n};\r\n\r\nAccordion.propTypes = {\r\n    //Element to be rendered as parent for accordion\r\n    element: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n    //'eventkey' of the acoordion/select which is active\r\n    activeEventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    //onToggle callback (eventKey) => void\r\n    onToggle: PropTypes.func\r\n};\r\n\r\nAccordion.defaultProps = {\r\n    //default render as div\r\n    element: 'div'\r\n}\r\n\r\nAccordion.Toggle = Toggle;\r\nAccordion.Collapse = Collapse;\r\n\r\nexport default Accordion;","import React from 'react';\r\nimport classNames from 'classnames/bind';\r\n\r\nimport styles from '../../styles/Card.scss'\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst CardHeader = ({ children, className, ...props }) => {\r\n  return (\r\n    <div className={cx('CardHeader', className)} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardHeader;\r\n","import React from 'react';\r\nimport classNames from 'classnames/bind';\r\n\r\nimport styles from '../../styles/Card.scss'\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst CardBody = ({ children, className, ...props }) => {\r\n  return (\r\n    <div className={cx('CardBody', className)} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardBody;","import React from 'react';\r\nimport classNames from 'classnames/bind';\r\n\r\nimport styles from '../../styles/Card.scss'\r\nimport CardHeader from './CardHeader';\r\nimport CardBody from './CardBody';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Card = ({ children, className }) => {\r\n  return <div className={cx('Card', className)}>{children}</div>;\r\n};\r\n\r\nCard.Header = CardHeader;\r\nCard.Body = CardBody;\r\n\r\nexport default Card;","const resumeContent = [\r\n    {\r\n        title: 'Nordstrom, Seattle WA (Software Engineer, Full-time)',\r\n        date: 'August 2019 - Present',\r\n        bullet: 'Developed and continuously deployed an internal applications tool designed to process and inspect product returns in Nordstrom stores, inventory facilities, and fulfillment centers that would save ~$14.5M projected expenses for the company in 2020.',\r\n        bullet2: 'Developed front-end facing applications designed to work on a company-wide scale using React Hooks, Sass, and Java Spring API',\r\n        bullet3: 'Maintained a Java Spring API running on Kubernetes, added and exposed endpoints that filtered and managed data from DynamoDB and other calls to company services.',\r\n        bullet4: 'Reviewed project user interface code, incorporated automated testing with Jest, logging, and refactored and reimplemented parts of the React UI.',\r\n        bullet5:  'Utilized Sass along with React Hooks to design interactive UIs, used Zeplin overlay to review and match the UI to company requirements',\r\n        bullet6:  'Created, managed, and resolved issues in GitLab and Jira boards to track progress with the team, as well as communicate goals with product and project management.'\r\n    },\r\n    {\r\n      title: 'Nordstrom, Seattle WA (Full Stack Intern)',\r\n      date: 'May 2019 - August 2019',\r\n      bullet: 'Developed UI features and service endpoints to better improve the usability of Nordstrom’s internal clothing lookup tool.',\r\n      bullet2: 'Utilized frameworks such as React class components and a Python Flask service layer connected to DynamoDB in order to filter out relevant data for dropdown UI elements.',\r\n      bullet3: 'Designed and incorporated a dynamic search filter tool that could filter clothing items based on color, size, location, and item disposition.',\r\n      bullet4: 'Routinely used git to rebase and merge code, using source control to manage integration and production pipelines to continuously deliver updated and running code without interfering with the overarching project.'\r\n  },  {\r\n      title: 'Nordstrom, Seattle WA (Software Engineer Intern)',\r\n      date: 'May 2018 - August 2018',\r\n      bullet: 'Developed an API proof of concept for Nordstrom’s supply chain utilizing Apache Kafka Streams.',\r\n      bullet2: 'Incorporated Java SpringBoot along with Docker and Kafka Streams to develop a service that would watch purchased orders over a time window, if those orders pertained to one customer then they would be consolidated instead of shipped in individual boxes.'\r\n  },  {\r\n      title: 'Studenterhuset, Copenhagen, Denmark (Bar Volunteer)',\r\n      date: 'August 2017 - May 2018',\r\n      bullet: 'Part of a volunteer crew of international students and Danes that would help the bar employees at Studenterhuset make drinks, maintain the bar, make sales and manage events.'\r\n  },  {\r\n      title: 'University of Puget Sound (Accommodations and Disability Tech Specialist)',\r\n      date: 'August 2015 - May 2017',\r\n      bullet: 'Had multiple responsibilities that involved being a confidential student liaison for students with disabilities. Some of my tasks included speaking with disabled students and helping them with any technological needs or accommodations that they might have. One of my biggest responsibilities was coordinating a team of other workers to help scan physical copies of books into digital e-books. '\r\n  }\r\n  ];\r\n\r\n  export default resumeContent;","import React, { useState } from 'react';\r\nimport Accordion from './Accordion';\r\nimport Card from './Card';\r\nimport '../styles/experience.scss';\r\nimport content from '../data/resumeContent'\r\nimport down from '../images/down.svg'\r\nimport up from '../images/up.svg'\r\n\r\nconst Experience = () => {\r\n    const [activeEventKey, setActiveEventKey] = useState(0);\r\n    return (\r\n        <div className=\"experience\">\r\n        <Accordion activeEventKey={activeEventKey} onToggle={setActiveEventKey}>\r\n            {content.map(({ title, date, bullet, bullet2, bullet3, bullet4, bullet5, bullet6 }, index) => (\r\n                <Card key={index}>\r\n                    <Accordion.Toggle element={Card.Header} eventKey={index}>\r\n                        <h4>{title}<br/><span className=\"tabDate\">{date}</span></h4>\r\n                        {activeEventKey !== index && <img src={down} alt=\"down\"/>}\r\n                        {activeEventKey === index && <img src={up} alt=\"up\"/>}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={index} element={Card.Body}>\r\n                        {bullet !== undefined ? <li>{bullet}</li> : null}\r\n                        {bullet2 !== undefined ? <li>{bullet2}</li> : null}\r\n                        {bullet3 !== undefined ? <li>{bullet3}</li> : null}\r\n                        {bullet4 !== undefined ? <li>{bullet4}</li> : null}\r\n                        {bullet5 !== undefined ? <li>{bullet5}</li> : null}\r\n                        {bullet6 !== undefined ? <li>{bullet6}</li> : null}\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            ))}\r\n        </Accordion>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Experience;","import React from 'react';\r\nimport '../styles/projects.scss';\r\n\r\nconst Projects = () => {\r\n    return (\r\n        <div className=\"projectBody\">\r\n            <h2 className=\"projectTitle\">Projects</h2>\r\n            <div className=\"projectList\">\r\n                <li><a href=\"https://github.com/nick-bigger/MoG-Kiosk\">Tacoma Museum of Glass Android Kiosk Application</a></li>\r\n                <li><a href=\"https://mjohnstone.itch.io/red-blood-cell-shooter\">Blood Cell Shooter - Unity Video Game Project</a></li>\r\n                <li><a href=\"https://mjohnstone.itch.io/mr-bluesky\">Mr Blue Sky - 2D Unity Game Project</a></li>\r\n            </div>\r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects;","import React from 'react'\r\nimport '../styles/skills.scss';\r\nconst Skills = () => {\r\n    return (\r\n        <div className=\"skillsBody\">\r\n            <h2 className=\"skillsTitle\">Skills</h2>\r\n            <div className=\"skillsSubtitle\">\r\n                <h3>Languages</h3>\r\n                <div className=\"skillsList\">\r\n                    <li>English - Native</li>\r\n                    <li>Arabic - Native</li>\r\n                    <li>Danish - Beginner</li>\r\n                </div>\r\n\r\n                <h3>Frameworks and Tools</h3>\r\n                <div className=\"skillsList\">\r\n                    <li>AWS</li>\r\n                    <li>GitLab, GitHub</li>\r\n                    <li>Swagger UI</li>\r\n                    <li>SpringBoot</li>\r\n                    <li>Jest</li>\r\n                    <li>Kubernetes</li>\r\n                    <li>Maven/Gradle</li>\r\n                    <li>Kafka Streams</li>\r\n                    <li>Unity</li>\r\n                    <li>Docker</li>\r\n                </div>\r\n                <h3>Programming Languages</h3>\r\n                <div className=\"skillsList\">\r\n                    <li>JavaScript</li>\r\n                    <li>React</li>  \r\n                    <li>Angular</li>\r\n                    <li>Node.js</li>\r\n                    <li>Java</li>\r\n                    <li>Python</li>\r\n                    <li>C#</li>\r\n                    <li>Sass</li>\r\n                    <li>SQL</li>\r\n                </div>  \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Skills;","import React from 'react';\r\nimport ResumeHeader from './components/ResumeHeader.js';\r\nimport Education from './components/Education';\r\nimport Experience from './components/Experience';\r\nimport Projects from './components/Projects';\r\nimport Skills from './components/Skills';\r\nimport style from './styles/App.scss';\r\nimport './styles/grid.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={style.body}>\r\n      <section className=\"wrapper\">\r\n        <div className=\"row\">\r\n          <ResumeHeader className=\"column-1\"/>\r\n          <Education className=\"column-2\"/>\r\n          <Experience className=\"column-3\"/>\r\n          <Projects className=\"column-4\"/>\r\n          <Skills className=\"column-5\"/>\r\n        </div>\r\n    \r\n      </section>\r\n \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/App.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}